{{- if .Values.web.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "acoustid-server.fullname" . }}-web
  labels:
    {{- include "acoustid-server.labels" . | nindent 4 }}
    app.kubernetes.io/component: web
spec:
  {{- if .Values.web.replicaCount }}
  replicas: {{ .Values.web.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: acoustid-server-web
      app.kubernetes.io/name: acoustid-server-web
      app.kubernetes.io/part-of: acoustid
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "acoustid-server.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-cron
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /opt/acoustid/server/admin/docker/run-web.sh
          env:
            - name: ACOUSTID_CONFIG
              value: /etc/acoustid/acoustid.conf
            - name: ACOUSTID_GUNICORN_THREADS
              value: "1"
            - name: ACOUSTID_GUNICORN_TIMEOUT
              value: "60"
            - name: ACOUSTID_GUNICORN_WORKERS
              value: "4"
            - name: ACOUSTID_GUNICORN_BACKLOG
              value: "256"
            - name: ACOUSTID_INDEX_PORT
              value: "6080"
          ports:
            - containerPort: 3032
              name: http
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: 3032
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /_health_docker
              port: 3032
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /etc/secrets/redis
              name: redis-password
            - mountPath: /etc/secrets/postgresql/acoustid
              name: postgresql-user-acoustid
            - mountPath: /etc/acoustid
              name: acoustid-config
            - mountPath: /etc/secrets/acoustid
              name: acoustid-secrets
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      volumes:
        - name: acoustid-config
          configMap:
            defaultMode: 420
            name: acoustid-server-config
        - name: acoustid-secrets
          secret:
            defaultMode: 420
            secretName: acoustid-server-secrets
        - name: redis-password
          secret:
            defaultMode: 420
            secretName: redis-password
        - name: postgresql-user-acoustid
          secret:
            defaultMode: 420
            secretName: postgresql-user-acoustid
{{- end }}
