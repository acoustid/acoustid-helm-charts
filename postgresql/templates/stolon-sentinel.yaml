apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgresql.fullname" . }}-stolon-sentinel
  labels:
    {{- include "postgresql.labels" . | nindent 4 }}
    app.kubernetes.io/component: stolon-sentinel
spec:
  replicas: {{ .Values.sentinel.replicas }}
  selector:
    matchLabels:
      {{- include "postgresql.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: stolon-sentinel
  template:
    metadata:
      labels:
        {{- include "postgresql.labels" . | nindent 8 }}
        app.kubernetes.io/component: stolon-sentinel
        component: stolon-sentinel
        stolon-cluster: {{ .Release.Name }}
      annotations:
        {{- if .Values.annotations }}
        {{- toYaml .Values.annotations | nindent 8 }}
        {{- end }}
        {{- if .Values.sentinel.annotations }}
        {{- toYaml .Values.sentinel.annotations | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "postgresql.serviceAccountName" . }}
      containers:
        - name: stolon-sentinel
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/bin/bash"
            - "-ec"
            - |
              exec gosu postgres stolon-sentinel
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STSENTINEL_CLUSTER_NAME
              value: {{ .Release.Name }}
            - name: STSENTINEL_STORE_BACKEND
              value: kubernetes
            - name: STSENTINEL_KUBE_RESOURCE_KIND
              value: configmap
            - name: STSENTINEL_INITIAL_CLUSTER_SPEC
              value: /etc/stolon/init-cluster-spec.json
            - name: STSENTINEL_METRICS_LISTEN_ADDRESS
              value: "0.0.0.0:{{ .Values.metrics.port }}"
            {{- if .Values.debug }}
            - name: STSENTINEL_DEBUG
              value: "false"
            {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
          volumeMounts:
            - name: config
              mountPath: /etc/stolon
          {{- if .Values.sentinel.resources }}
          resources:
            {{- toYaml .Values.sentinel.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "postgresql.fullname" . }}-config
