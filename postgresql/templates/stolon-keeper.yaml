apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgresql.fullname" . }}-stolon-keeper
  labels:
    {{- include "postgresql.labels" . | nindent 4 }}
    app.kubernetes.io/component: stolon-keeper
spec:
  serviceName: stolon-keeper
  replicas: {{ .Values.keeper.replicas }}
#  updateStrategy:
#    type: OnDelete
  selector:
    matchLabels:
      {{- include "postgresql.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: stolon-keeper
  template:
    metadata:
      labels:
        {{- include "postgresql.labels" . | nindent 8 }}
        app.kubernetes.io/component: stolon-keeper
        component: stolon-keeper
        stolon-cluster: {{ .Release.Name }}
      annotations:
        {{- if .Values.annotations }}
        {{- toYaml .Values.annotations | nindent 8 }}
        {{- end }}
        {{- if .Values.keeper.annotations }}
        {{- toYaml .Values.keeper.annotations | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ include "postgresql.serviceAccountName" . }}
      containers:
        - name: stolon-keeper
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/bin/bash"
            - "-ec"
            - |
              chown postgres:postgres $STKEEPER_DATA_DIR
              exec gosu postgres stolon-keeper
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STKEEPER_CLUSTER_NAME
              value: {{ .Release.Name }}
            - name: STKEEPER_STORE_BACKEND
              value: kubernetes
            - name: STKEEPER_KUBE_RESOURCE_KIND
              value: configmap
            - name: STKEEPER_DATA_DIR
              value: /data
            - name: STKEEPER_PG_REPL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.replicationSecretName" . }}
                  key: username
            - name: STKEEPER_PG_REPL_PASSWORDFILE
              value: /etc/secrets/postgresql/replication/password
            - name: STKEEPER_PG_SU_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.superuserSecretName" . }}
                  key: username
            - name: STKEEPER_PG_SU_PASSWORDFILE
              value: /etc/secrets/postgresql/superuser/password
            - name: STKEEPER_PG_LISTEN_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: STKEEPER_METRICS_LISTEN_ADDRESS
              value: "0.0.0.0:{{ .Values.metrics.port }}"
            {{- if .Values.debug }}
            - name: STKEEPER_DEBUG
              value: "true"
            {{- end }}
            - name: PGHOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PGUSERFILE
              value: /etc/secrets/postgresql/superuser/username
            - name: PGPASSWORDFILE
              value: /etc/secrets/postgresql/superuser/password
          ports:
            - name: postgresql
              containerPort: 5432
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/stolon
            - name: superuser
              mountPath: /etc/secrets/postgresql/superuser
            - name: replication
              mountPath: /etc/secrets/postgresql/replication
            {{- if .Values.backup.enabled }}
            - name: wal-g
              mountPath: /etc/wal-g.d/env
            {{- end }}
          {{- if .Values.keeper.resources }}
          resources:
            {{- toYaml .Values.keeper.resources | nindent 12 }}
          {{- end }}
        - name: exporter
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/bin/bash"
            - "-ec"
            - |
              export DATA_SOURCE_URI="$POD_IP:5432/postgres?sslmode=disable"
              exec gosu postgres /opt/postgres_exporter/bin/postgres_exporter_v0.5.1_linux-amd64/postgres_exporter
          env:
            - name: PG_EXPORTER_WEB_LISTEN_ADDRESS
              value: "0.0.0.0:{{ .Values.exporter.port }}"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DATA_SOURCE_USER_FILE
              value: /etc/secrets/postgresql/superuser/username
            - name: DATA_SOURCE_PASS_FILE
              value: /etc/secrets/postgresql/superuser/password
          volumeMounts:
            - name: superuser
              mountPath: /etc/secrets/postgresql/superuser
      volumes:
{{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
{{- end }}
        - name: superuser
          secret:
            secretName: {{ include "postgresql.superuserSecretName" . }}
        - name: replication
          secret:
            secretName: {{ include "postgresql.replicationSecretName" . }}
        - name: config
          configMap:
            name: {{ include "postgresql.fullname" . }}-config
        {{- if .Values.backup.enabled }}
        - name: wal-g
          secret:
            secretName: {{ include "postgresql.backupConfigSecretName" . | quote }}
        {{- end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "postgresql.volumeClaimTemplateLabels" . | nindent 10 }}
      spec:
        accessModes: [ "{{ .Values.persistence.accessMode }}" ]
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
{{- end }}
